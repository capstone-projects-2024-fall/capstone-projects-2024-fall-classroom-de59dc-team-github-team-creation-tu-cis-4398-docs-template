{"ast":null,"code":"var _jsxFileName = \"/Users/prince/Desktop/project-techtrek/techtrek/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport LoginPage from './LoginPage';\nimport SignUpForm from './SignUpForm';\nimport Dashboard from './Dashboard'; // Import your Dashboard component\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Check local storage for login status on app load\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    const savedLoginStatus = localStorage.getItem('isLoggedIn');\n    return savedLoginStatus === 'true'; // Convert to boolean\n  });\n  const handleLogin = loginStatus => {\n    setIsLoggedIn(loginStatus);\n    localStorage.setItem('isLoggedIn', loginStatus); // Store login status in local storage\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn'); // Remove login status from local storage\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/SignUpForm\",\n        element: /*#__PURE__*/_jsxDEV(SignUpForm, {\n          onLogin: handleLogin,\n          onClose: () => {/* handle closing the sign-up */}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Dashboard\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          isLoggedIn: isLoggedIn,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n// A private route component to protect the dashboard route\n_s(App, \"LojSpjDMJ27lcu6rsUrwg3GP9DM=\");\n_c = App;\nconst PrivateRoute = ({\n  isLoggedIn,\n  onLogout\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  const handleLogoutClick = async () => {\n    onLogout();\n    navigate('/'); // Redirect to login page after logout\n  };\n  return isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {\n    onLogout: handleLogoutClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 70\n  }, this);\n};\n_s2(PrivateRoute, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = PrivateRoute;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"names":["LoginPage","SignUpForm","Dashboard","React","useState","BrowserRouter","Router","Routes","Route","useNavigate","Navigate","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","savedLoginStatus","localStorage","getItem","handleLogin","loginStatus","setItem","handleLogout","removeItem","children","path","element","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClose","PrivateRoute","_c","_s2","navigate","handleLogoutClick","to","_c2","$RefreshReg$"],"sources":["/Users/prince/Desktop/project-techtrek/techtrek/src/App.js"],"sourcesContent":["import LoginPage from './LoginPage';\nimport SignUpForm from './SignUpForm';\nimport Dashboard from './Dashboard'; // Import your Dashboard component\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, Navigate } from 'react-router-dom';\n\nfunction App() {\n  // Check local storage for login status on app load\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    const savedLoginStatus = localStorage.getItem('isLoggedIn');\n    return savedLoginStatus === 'true'; // Convert to boolean\n  });\n\n  const handleLogin = (loginStatus) => {\n    setIsLoggedIn(loginStatus);\n    localStorage.setItem('isLoggedIn', loginStatus); // Store login status in local storage\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn'); // Remove login status from local storage\n  };\n\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={isLoggedIn ? <Dashboard onLogout={handleLogout} /> : <LoginPage onLogin={handleLogin} />} />\n                <Route path=\"/SignUpForm\" element={<SignUpForm onLogin={handleLogin} onClose={() => { /* handle closing the sign-up */ }} />} /> {/* Pass onLogin prop */}\n                <Route path=\"/Dashboard\" element={<PrivateRoute isLoggedIn={isLoggedIn} onLogout={handleLogout} />} />\n            </Routes>\n        </Router>\n    );\n}\n\n// A private route component to protect the dashboard route\nconst PrivateRoute = ({ isLoggedIn, onLogout }) => {\n    const navigate = useNavigate();\n\n    const handleLogoutClick = async () => {\n        onLogout();\n        navigate('/'); // Redirect to login page after logout\n    };\n\n    return isLoggedIn ? <Dashboard onLogout={handleLogoutClick} /> : <Navigate to=\"/\" />;\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}